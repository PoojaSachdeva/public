import os
import re
import docx
from openpyxl import Workbook, load_workbook

def extract_qa_to_excel_with_headers(input_excel_file_path, input_excel_sheet_name, output_excel_file_path):
    """
    Reads Word document paths from an input Excel file, extracts questions and answers from each document,
    and writes them to a single output Excel file.
    """
    # Load the workbook that contains Word document paths
    input_workbook = load_workbook(input_excel_file_path)
    input_sheet = input_workbook[input_excel_sheet_name]

    # Create an output workbook for all Q&A
    output_workbook = Workbook()
    output_sheet = output_workbook.active
    output_sheet.append(["File Name", "Header", "Question", "Answer", "Objection Number", "Response Number", "Match Status"])

    # Regex patterns for flexibility
    objection_pattern = re.compile(r'(Objec.\d+[^\s]*)', re.IGNORECASE)
    response_pattern = re.compile(r'(Response\s*\d+[^\s]*)', re.IGNORECASE)

    # Iterate over all rows in the input Excel (assume Word document paths are in the first column)
    for row in input_sheet.iter_rows(min_row=2, max_col=1, values_only=True):
        docx_path = row[0]
        filename = docx_path.split('/')[-1]

        # Check if the Word document file exists
        if not os.path.exists(docx_path):
            print(f"Word document not found: {docx_path}")
            continue

        # Load the Word document
        doc = docx.Document(docx_path)

        # Extract all text from the document
        full_text = ''
        for para in doc.paragraphs:
            full_text += para.text + '\n'

        # Assume the first paragraph is the header
        header = doc.paragraphs[0].text.strip()
        print(header)

        # Split the full text into sections by Objection
        sections = re.split(objection_pattern, full_text)
        print(full_text[:500])  # print 500 characters of extracted text
        print("break")
        print(sections)
        print(f"Found {len(sections)//2} objections.")

        for i in range(1, len(sections), 2):
            objection_header = sections[i].strip()
            question_section = sections[i + 1].strip()

            match = response_pattern.search(question_section)
            if match:
                question_text = question_section[:match.start()].strip()
                answer_text = question_section[match.end():].strip()

                # Clean question and answer text
                question = re.sub(objection_pattern, '', objection_header + ' ' + question_text).strip()
                answer = re.sub(response_pattern, '', answer_text).strip()

                # Extract objection and response numbers
                objection_number_match = re.search(r'\d+', objection_header)
                objection_number = objection_number_match.group() if objection_number_match else 'N/A'

                response_number_match = re.search(r'\d+', question_section[match.start():match.end()])
                response_number = response_number_match.group() if response_number_match else 'N/A'

                # Check if numbers match
                match_status = objection_number == response_number

                output_sheet.append([filename, header, question, answer, objection_number, response_number, match_status])

    # Save the compiled output workbook
    output_workbook.save(output_excel_file_path)
