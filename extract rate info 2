import pandas as pd
import PyPDF2

def extract_rate_information_from_pdf(pdf_path):
    rate_indication = None
    rate_impact = None
    
    # Open the PDF file
    with open(pdf_path, 'rb') as file:
        reader = PyPDF2.PdfReader(file)
        
        # Iterate over each page in the PDF
        for page_number in range(len(reader.pages)):
            page = reader.pages[page_number]
            
            # Extract text from the current page
            text = page.extract_text()
            
            # Extract rate indication
            if "Overall Percentage Rate Indication For This Filing:" in text:
                rate_indication = text.split("Overall Percentage Rate Indication For This Filing:")[-1].split("\n")[0]

            # Extract rate impact
            if "Overall Percentage Rate Impact For This Filing:" in text:
                rate_impact = text.split("Overall Percentage Rate Impact For This Filing:")[-1].split("\n")[0]

    return rate_indication, rate_impact

def extract_rates_to_excel(excel_path):
    # Read the Excel file
    pdf_paths_df = pd.read_excel(excel_path)
    
    # Create a DataFrame to store the extracted rates
    rates_df = pd.DataFrame(columns=['PDF Path', 'Rate Indication', 'Rate Impact'])

    # Iterate through each row in the DataFrame
    for index, row in pdf_paths_df.iterrows():
        pdf_path = row['PDF Path']
        
        rate_indication, rate_impact = extract_rate_information_from_pdf(pdf_path)

        # Add the extracted rates to the DataFrame
        rates_df = rates_df.append({'PDF Path': pdf_path, 'Rate Indication': rate_indication, 'Rate Impact': rate_impact}, ignore_index=True)

    # Save the DataFrame to an Excel file
    rates_df.to_excel('output.xlsx', index=False)

# Example usage
excel_file_path = 'path/to/your/excel_file.xlsx'
extract_rates_to_excel(excel_file_path)
