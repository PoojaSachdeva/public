read word
from docx import Document

# Path to the Word document
doc_path = "/mnt/data/file-0klJzLjH6Z4KL2VUHDVB3c8H"

# Function to read and print all text from a Word document
def read_doc(doc_path):
    doc = Document(doc_path)
    text = ' '.join([para.text for para in doc.paragraphs])
    return text

# Read and print all text from the document
all_text = read_doc(doc_path)
print(all_text)


from docx import Document
import os
import re

# Define the path to the Word document
docx_path = "/mnt/data/file-iFnlrbbDAuvbroNN9zja010h"

# Check if the document exists
if not os.path.exists(docx_path):
    print(f"Word document not found: {docx_path}")
else:
    # Open the Word document
    print(docx_path)
    doc = Document(docx_path)
    full_text = ""  # Initialize variable to store all document data

    # Loop through each paragraph in the document
    for para in doc.paragraphs:
        full_text += para.text + "\n"  # Combine all text in the document

    # Extract the first line of the first paragraph as the header
    if len(doc.paragraphs) == 0:
        print(f"No paragraphs found in document: {docx_path}")
    else:
        first_page_text = doc.paragraphs[0].text.split('\n')  # Access first paragraph and split into lines
        header = first_page_text[0] if first_page_text else "No header found"  # Picks up header - first line
        print(header)

    # Split the full text into sections by objection
    objection_pattern = r"\bObjection\b"  # Define your objection pattern here
    sections = re.split(objection_pattern, full_text)
    print(full_text[:100])  # Print first 100 characters of extracted text
    print(f"Found {len(sections)//2} objections.")
