import os
import pdfplumber
from openpyxl import Workbook, load_workbook

def check_path_exists(excel_file, pdf_column, status_column):
    workbook = load_workbook(excel_file)
    sheet = workbook.active
    for row in sheet.iter_rows(min_row=2, min_col=pdf_column, max_col=pdf_column):
        pdf_path = row[0].value
        if os.path.exists(pdf_path):
            sheet.cell(row=row[0].row, column=status_column, value="Exists")
        else:
            sheet.cell(row=row[0].row, column=status_column, value="Not Found")
    workbook.save(excel_file)

def extract_information_from_pdf(pdf_path, search_terms):
    results = {term: "Not found" for term in search_terms.keys()}
    if os.path.exists(pdf_path):
        with pdfplumber.open(pdf_path) as pdf:
            for page in pdf.pages:
                tables = page.extract_tables()
                for table in tables:
                    for row in table:
                        for term in search_terms.keys():
                            if any(term in cell for cell in row if cell):
                                term_index = next(i for i, cell in enumerate(row) if term in cell)
                                value_index = term_index + 1 if term_index + 1 < len(row) else term_index
                                results[term] = row[value_index] if row[value_index] else "Not found"
    return results

def update_excel_with_results(excel_file, pdf_column, search_terms):
    workbook = load_workbook(excel_file)
    sheet = workbook.active
    for row in sheet.iter_rows(min_row=2, min_col=pdf_column, max_col=pdf_column):
        pdf_path = row[0].value
        results = extract_information_from_pdf(pdf_path, search_terms)
        for term, col in search_terms.items():
            sheet.cell(row=row[0].row, column=col, value=results[term])
    workbook.save(excel_file)

def main():
    excel_file = 'D:\\Scholarship\\input_paths.xlsx'
    
    # Check if paths exist and update status in column B
    check_path_exists(excel_file, pdf_column=1, status_column=2)
    
    # Define search terms and their corresponding columns
    search_terms = {
        "Overall Percentage Rate Impact For This Filing:": 4,
        "Written Premium:": 5,
        "Overall Rate Change:": 6,
        # Add more search terms and corresponding column indices here
    }
    
    # Extract information and update the Excel file
    update_excel_with_results(excel_file, pdf_column=1, search_terms=search_terms)

if __name__ == "__main__":
    main()
